import React, { useState, useEffect } from "react";
import Router, { useRouter } from "next/router";
import axios from "axios";
import Layout from "../../component/Layout";
import useSWR from 'swr'
import Card from "@mui/material/Card";
import Sidebar from "../Sidebar";
import Pagination from '@mui/material/Pagination';
import Stack from '@mui/material/Stack';
import Link from "next/link";
import { Button, Typography } from "@mui/material";
import Head from "next/head";
import { TextField } from "@mui/material";
import ShowCarousel from "../Carousel";
import Footer from "../Footer";
import GoUp from "../scrollUp";
import ShowAside from "../Aside";
export default function Display({ posts }) {

    const [isLoading, setLoading] = useState(false);
    const [inputText, setInputText] = useState("");
    const [page, setPage] = useState(1)
    const [PagePost, setPagePsot] = useState()
    const router = useRouter()

    const fetcher = (...args) => fetch(...args).then((res) => res.json())
    const { data, error } = useSWR(`http://localhost:3000/api/PaginateApi/${page}`, fetcher)

    if (error) { console.log("error", error) }

    const { Paginate } = router.query

    useEffect(() => {

        if (Paginate) {
            setPage(parseInt(router.query.Paginate))
        }

        if (data) {
            let availableProjects = data.post.filter((fi) => {
                if (inputText === '') {

                    return fi;
                }

                else {

                    return fi.title.toLowerCase().includes(inputText)

                };
            })

            setPagePsot(availableProjects)
        }

    }, [Paginate, data, inputText])

    const handlePaginationChange = (e, page) => {
        setPage(page)
        router.push(`/Posts/${page}`)


    }

    const inputHandler = (e) => {
        var lowerCase = e.target.value.toLowerCase();
        setInputText(lowerCase);
    }


    return (

        <>

            <Layout>

                <ShowCarousel />
                <ShowAside />
                <GoUp />

                <div className="SearchField">
                    <TextField
                        id="outlined-basic"
                        onChange={inputHandler}
                        variant="outlined"

                        label="Search On Product" />

                </div>
                <div >
                    <Head>
                        <title>Create Next App</title>

                        <meta name="description" content="Generated by create next app" />
                        <link rel="icon" href="/favicon.ico" />
                    </Head>
                    <main>
                        <div className="overture">
                            <Typography variant="h3" component="h3">Products</Typography>

                            <br />
                        </div>
                        <div className="flex-container">

                            {isLoading &&
                                <h1>Loading</h1>}

                            {data && PagePost &&
                                PagePost.map((post, i) => {
                                    return (
                                        <article key={i}>
                                            <img
                                                src={`/Post/${post.ImageName}`}
                                                alt={post.author}
                                                height={200}
                                                loading='lazy'
                                                width={200}
                                            />
                                            <div className='text'>
                                                <p><Link href={`/Post/${post._id}`}>title: {post.title}</Link></p>
                                                <p><Link href={`/Post/${post._id}`}>content : {post.content}</Link></p>
                                                <p><Link href={`/Post/${post._id}`}>author: {post.author}</Link></p>

                                            </div>
                                            <Button variant="contained" color="success" fullWidth onClick={() => router.push(`/Post/${post._id}`, undefined, { shallow: true, scroll: true })}>See More</Button>
                                        </article>



                                    )
                                })
                            }
                        </div>
                        <br />
                        <div className="Pagination">
                            {data &&
                                <Stack spacing={2}>

                                    <Pagination
                                        count={data?.pageCount}
                                        variant='outlined'
                                        className='pagination'
                                        color="secondary"
                                        page={page}
                                        onChange={handlePaginationChange}
                                    />

                                </Stack>
                            }
                        </div>

                    </main>

                </div>
            </Layout>
        </>)
}

